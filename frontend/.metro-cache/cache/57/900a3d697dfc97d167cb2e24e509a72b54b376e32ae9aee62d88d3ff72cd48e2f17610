{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExponentSpeech","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":46,"index":103}}],"key":"G2eOEME+jLV6t/F9m3g24/ZyRUs=","exportNames":["*"],"imports":1}},{"name":"./Speech.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":46,"index":150}}],"key":"SNz2Uxx+h7gZlVByUTOQkNQNiYw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"VoiceQuality\", {\n    enumerable: true,\n    get: function () {\n      return _SpeechTypes.VoiceQuality;\n    }\n  });\n  exports.speak = speak;\n  exports.getAvailableVoicesAsync = getAvailableVoicesAsync;\n  exports.isSpeakingAsync = isSpeakingAsync;\n  exports.stop = stop;\n  exports.pause = pause;\n  exports.resume = resume;\n  Object.defineProperty(exports, \"maxSpeechInputLength\", {\n    enumerable: true,\n    get: function () {\n      return maxSpeechInputLength;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _ExponentSpeech = require(_dependencyMap[2], \"./ExponentSpeech\");\n  var ExponentSpeech = _interopDefault(_ExponentSpeech);\n  var _SpeechTypes = require(_dependencyMap[3], \"./Speech.types\");\n  var _CALLBACKS = {};\n  var _nextCallbackId = 1;\n  var _didSetListeners = false;\n  function _makeCallbackId() {\n    return String(_nextCallbackId++);\n  }\n  function _unregisterListenersIfNeeded() {\n    if (Object.keys(_CALLBACKS).length === 0) {\n      removeSpeakingListener('Exponent.speakingStarted');\n      removeSpeakingListener('Exponent.speakingWillSayNextString');\n      removeSpeakingListener('Exponent.speakingDone');\n      removeSpeakingListener('Exponent.speakingStopped');\n      removeSpeakingListener('Exponent.speakingError');\n      _didSetListeners = false;\n    }\n  }\n  function _registerListenersIfNeeded() {\n    if (_didSetListeners) return;\n    _didSetListeners = true;\n    setSpeakingListener('Exponent.speakingStarted', _ref => {\n      var id = _ref.id;\n      var options = _CALLBACKS[id];\n      if (options && options.onStart) {\n        options.onStart();\n      }\n    });\n    setSpeakingListener('Exponent.speakingWillSayNextString', _ref2 => {\n      var id = _ref2.id,\n        charIndex = _ref2.charIndex,\n        charLength = _ref2.charLength;\n      var options = _CALLBACKS[id];\n      if (options && options.onBoundary) {\n        // @ts-expect-error TODO(cedric): type is `SpeechEventCallback` while it should be `NativeBoundaryEventCallback` in this context, resulting in errors around `this` context\n        options.onBoundary({\n          charIndex,\n          charLength\n        });\n      }\n    });\n    setSpeakingListener('Exponent.speakingDone', _ref3 => {\n      var id = _ref3.id;\n      var options = _CALLBACKS[id];\n      if (options && options.onDone) {\n        options.onDone();\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n    setSpeakingListener('Exponent.speakingStopped', _ref4 => {\n      var id = _ref4.id;\n      var options = _CALLBACKS[id];\n      if (options && options.onStopped) {\n        options.onStopped();\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n    // @ts-expect-error TODO(cedric): Android does not provide the `error` parameter for the `speakingError` event, while iOS never uses this event at all\n    setSpeakingListener('Exponent.speakingError', _ref5 => {\n      var id = _ref5.id,\n        error = _ref5.error;\n      var options = _CALLBACKS[id];\n      if (options && options.onError) {\n        options.onError(new Error(error));\n      }\n      delete _CALLBACKS[id];\n      _unregisterListenersIfNeeded();\n    });\n  }\n  // @needsAudit\n  /**\n   * Speak out loud the text given options. Calling this when another text is being spoken adds\n   * an utterance to queue.\n   * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n   * @param options A `SpeechOptions` object.\n   */\n  function speak(text) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var id = _makeCallbackId();\n    _CALLBACKS[id] = options;\n    _registerListenersIfNeeded();\n    ExponentSpeech.default.speak(String(id), text, options);\n  }\n  // @needsAudit\n  /**\n   * Returns list of all available voices.\n   * @return List of `Voice` objects.\n   */\n  function getAvailableVoicesAsync() {\n    return _getAvailableVoicesAsync.apply(this, arguments);\n  } //@needsAudit\n  /**\n   * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n   * is paused.\n   * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n   */\n  function _getAvailableVoicesAsync() {\n    _getAvailableVoicesAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExponentSpeech.default.getVoices) {\n        throw new _expoModulesCore.UnavailabilityError('Speech', 'getVoices');\n      }\n      return ExponentSpeech.default.getVoices();\n    });\n    return _getAvailableVoicesAsync.apply(this, arguments);\n  }\n  function isSpeakingAsync() {\n    return _isSpeakingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Interrupts current speech and deletes all in queue.\n   */\n  function _isSpeakingAsync() {\n    _isSpeakingAsync = (0, _asyncToGenerator.default)(function* () {\n      return ExponentSpeech.default.isSpeaking();\n    });\n    return _isSpeakingAsync.apply(this, arguments);\n  }\n  function stop() {\n    return _stop.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Pauses current speech. This method is not available on Android.\n   */\n  function _stop() {\n    _stop = (0, _asyncToGenerator.default)(function* () {\n      return ExponentSpeech.default.stop();\n    });\n    return _stop.apply(this, arguments);\n  }\n  function pause() {\n    return _pause.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n   * available on Android.\n   */\n  function _pause() {\n    _pause = (0, _asyncToGenerator.default)(function* () {\n      if (!ExponentSpeech.default.pause) {\n        throw new _expoModulesCore.UnavailabilityError('Speech', 'pause');\n      }\n      return ExponentSpeech.default.pause();\n    });\n    return _pause.apply(this, arguments);\n  }\n  function resume() {\n    return _resume.apply(this, arguments);\n  }\n  function _resume() {\n    _resume = (0, _asyncToGenerator.default)(function* () {\n      if (!ExponentSpeech.default.resume) {\n        throw new _expoModulesCore.UnavailabilityError('Speech', 'resume');\n      }\n      return ExponentSpeech.default.resume();\n    });\n    return _resume.apply(this, arguments);\n  }\n  function setSpeakingListener(eventName, callback) {\n    var listenerCount = ExponentSpeech.default.listenerCount(eventName);\n    if (listenerCount > 0) {\n      ExponentSpeech.default.removeAllListeners(eventName);\n    }\n    ExponentSpeech.default.addListener(eventName, callback);\n  }\n  function removeSpeakingListener(eventName) {\n    ExponentSpeech.default.removeAllListeners(eventName);\n  }\n  // @needsAudit\n  /**\n   * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n   * On iOS, this returns `Number.MAX_VALUE`.\n   */\n  var maxSpeechInputLength = ExponentSpeech.default.maxSpeechInputLength || Number.MAX_VALUE;\n});","lineCount":209,"map":[[12,2,4,0,"Object"],[12,8,4,0],[12,9,4,0,"defineProperty"],[12,23,4,0],[12,24,4,0,"exports"],[12,31,4,0],[13,4,4,0,"enumerable"],[13,14,4,0],[14,4,4,0,"get"],[14,7,4,0],[14,18,4,0,"get"],[14,19,4,0],[15,6,4,0],[15,13,4,9,"VoiceQuality"],[15,25,4,21],[15,26,4,21,"VoiceQuality"],[15,38,4,21],[16,4,4,21],[17,2,4,21],[18,2,74,0,"exports"],[18,9,74,0],[18,10,74,0,"speak"],[18,15,74,0],[18,18,74,0,"speak"],[18,23,74,0],[19,2,85,0,"exports"],[19,9,85,0],[19,10,85,0,"getAvailableVoicesAsync"],[19,33,85,0],[19,36,85,0,"getAvailableVoicesAsync"],[19,59,85,0],[20,2,97,0,"exports"],[20,9,97,0],[20,10,97,0,"isSpeakingAsync"],[20,25,97,0],[20,28,97,0,"isSpeakingAsync"],[20,43,97,0],[21,2,104,0,"exports"],[21,9,104,0],[21,10,104,0,"stop"],[21,14,104,0],[21,17,104,0,"stop"],[21,21,104,0],[22,2,111,0,"exports"],[22,9,111,0],[22,10,111,0,"pause"],[22,15,111,0],[22,18,111,0,"pause"],[22,23,111,0],[23,2,122,0,"exports"],[23,9,122,0],[23,10,122,0,"resume"],[23,16,122,0],[23,19,122,0,"resume"],[23,25,122,0],[24,2,143,0,"Object"],[24,8,143,0],[24,9,143,0,"defineProperty"],[24,23,143,0],[24,24,143,0,"exports"],[24,31,143,0],[25,4,143,0,"enumerable"],[25,14,143,0],[26,4,143,0,"get"],[26,7,143,0],[26,18,143,0,"get"],[26,19,143,0],[27,6,143,0],[27,13,143,0,"maxSpeechInputLength"],[27,33,143,0],[28,4,143,0],[29,2,143,0],[30,2,143,92],[30,6,143,92,"_babelRuntimeHelpersAsyncToGenerator"],[30,42,143,92],[30,45,143,92,"require"],[30,52,143,92],[30,53,143,92,"_dependencyMap"],[30,67,143,92],[31,2,143,92],[31,6,143,92,"_asyncToGenerator"],[31,23,143,92],[31,26,143,92,"_interopDefault"],[31,41,143,92],[31,42,143,92,"_babelRuntimeHelpersAsyncToGenerator"],[31,78,143,92],[32,2,1,0],[32,6,1,0,"_expoModulesCore"],[32,22,1,0],[32,25,1,0,"require"],[32,32,1,0],[32,33,1,0,"_dependencyMap"],[32,47,1,0],[33,2,2,0],[33,6,2,0,"_ExponentSpeech"],[33,21,2,0],[33,24,2,0,"require"],[33,31,2,0],[33,32,2,0,"_dependencyMap"],[33,46,2,0],[34,2,2,0],[34,6,2,0,"ExponentSpeech"],[34,20,2,0],[34,23,2,0,"_interopDefault"],[34,38,2,0],[34,39,2,0,"_ExponentSpeech"],[34,54,2,0],[35,2,3,0],[35,6,3,0,"_SpeechTypes"],[35,18,3,0],[35,21,3,0,"require"],[35,28,3,0],[35,29,3,0,"_dependencyMap"],[35,43,3,0],[36,2,5,0],[36,6,5,6,"_CALLBACKS"],[36,16,5,16],[36,19,5,19],[36,20,5,20],[36,21,5,21],[37,2,6,0],[37,6,6,4,"_nextCallbackId"],[37,21,6,19],[37,24,6,22],[37,25,6,23],[38,2,7,0],[38,6,7,4,"_didSetListeners"],[38,22,7,20],[38,25,7,23],[38,30,7,28],[39,2,8,0],[39,11,8,9,"_makeCallbackId"],[39,26,8,24,"_makeCallbackId"],[39,27,8,24],[39,29,8,27],[40,4,9,4],[40,11,9,11,"String"],[40,17,9,17],[40,18,9,18,"_nextCallbackId"],[40,33,9,33],[40,35,9,35],[40,36,9,36],[41,2,10,0],[42,2,11,0],[42,11,11,9,"_unregisterListenersIfNeeded"],[42,39,11,37,"_unregisterListenersIfNeeded"],[42,40,11,37],[42,42,11,40],[43,4,12,4],[43,8,12,8,"Object"],[43,14,12,14],[43,15,12,15,"keys"],[43,19,12,19],[43,20,12,20,"_CALLBACKS"],[43,30,12,30],[43,31,12,31],[43,32,12,32,"length"],[43,38,12,38],[43,43,12,43],[43,44,12,44],[43,46,12,46],[44,6,13,8,"removeSpeakingListener"],[44,28,13,30],[44,29,13,31],[44,55,13,57],[44,56,13,58],[45,6,14,8,"removeSpeakingListener"],[45,28,14,30],[45,29,14,31],[45,65,14,67],[45,66,14,68],[46,6,15,8,"removeSpeakingListener"],[46,28,15,30],[46,29,15,31],[46,52,15,54],[46,53,15,55],[47,6,16,8,"removeSpeakingListener"],[47,28,16,30],[47,29,16,31],[47,55,16,57],[47,56,16,58],[48,6,17,8,"removeSpeakingListener"],[48,28,17,30],[48,29,17,31],[48,53,17,55],[48,54,17,56],[49,6,18,8,"_didSetListeners"],[49,22,18,24],[49,25,18,27],[49,30,18,32],[50,4,19,4],[51,2,20,0],[52,2,21,0],[52,11,21,9,"_registerListenersIfNeeded"],[52,37,21,35,"_registerListenersIfNeeded"],[52,38,21,35],[52,40,21,38],[53,4,22,4],[53,8,22,8,"_didSetListeners"],[53,24,22,24],[53,26,23,8],[54,4,24,4,"_didSetListeners"],[54,20,24,20],[54,23,24,23],[54,27,24,27],[55,4,25,4,"setSpeakingListener"],[55,23,25,23],[55,24,25,24],[55,50,25,50],[55,52,25,52,"_ref"],[55,56,25,52],[55,60,25,64],[56,6,25,64],[56,10,25,55,"id"],[56,12,25,57],[56,15,25,57,"_ref"],[56,19,25,57],[56,20,25,55,"id"],[56,22,25,57],[57,6,26,8],[57,10,26,14,"options"],[57,17,26,21],[57,20,26,24,"_CALLBACKS"],[57,30,26,34],[57,31,26,35,"id"],[57,33,26,37],[57,34,26,38],[58,6,27,8],[58,10,27,12,"options"],[58,17,27,19],[58,21,27,23,"options"],[58,28,27,30],[58,29,27,31,"onStart"],[58,36,27,38],[58,38,27,40],[59,8,28,12,"options"],[59,15,28,19],[59,16,28,20,"onStart"],[59,23,28,27],[59,24,28,28],[59,25,28,29],[60,6,29,8],[61,4,30,4],[61,5,30,5],[61,6,30,6],[62,4,31,4,"setSpeakingListener"],[62,23,31,23],[62,24,31,24],[62,60,31,60],[62,62,31,62,"_ref2"],[62,67,31,62],[62,71,31,97],[63,6,31,97],[63,10,31,65,"id"],[63,12,31,67],[63,15,31,67,"_ref2"],[63,20,31,67],[63,21,31,65,"id"],[63,23,31,67],[64,8,31,69,"charIndex"],[64,17,31,78],[64,20,31,78,"_ref2"],[64,25,31,78],[64,26,31,69,"charIndex"],[64,35,31,78],[65,8,31,80,"charLength"],[65,18,31,90],[65,21,31,90,"_ref2"],[65,26,31,90],[65,27,31,80,"charLength"],[65,37,31,90],[66,6,32,8],[66,10,32,14,"options"],[66,17,32,21],[66,20,32,24,"_CALLBACKS"],[66,30,32,34],[66,31,32,35,"id"],[66,33,32,37],[66,34,32,38],[67,6,33,8],[67,10,33,12,"options"],[67,17,33,19],[67,21,33,23,"options"],[67,28,33,30],[67,29,33,31,"onBoundary"],[67,39,33,41],[67,41,33,43],[68,8,34,12],[69,8,35,12,"options"],[69,15,35,19],[69,16,35,20,"onBoundary"],[69,26,35,30],[69,27,35,31],[70,10,36,16,"charIndex"],[70,19,36,25],[71,10,37,16,"charLength"],[72,8,38,12],[72,9,38,13],[72,10,38,14],[73,6,39,8],[74,4,40,4],[74,5,40,5],[74,6,40,6],[75,4,41,4,"setSpeakingListener"],[75,23,41,23],[75,24,41,24],[75,47,41,47],[75,49,41,49,"_ref3"],[75,54,41,49],[75,58,41,61],[76,6,41,61],[76,10,41,52,"id"],[76,12,41,54],[76,15,41,54,"_ref3"],[76,20,41,54],[76,21,41,52,"id"],[76,23,41,54],[77,6,42,8],[77,10,42,14,"options"],[77,17,42,21],[77,20,42,24,"_CALLBACKS"],[77,30,42,34],[77,31,42,35,"id"],[77,33,42,37],[77,34,42,38],[78,6,43,8],[78,10,43,12,"options"],[78,17,43,19],[78,21,43,23,"options"],[78,28,43,30],[78,29,43,31,"onDone"],[78,35,43,37],[78,37,43,39],[79,8,44,12,"options"],[79,15,44,19],[79,16,44,20,"onDone"],[79,22,44,26],[79,23,44,27],[79,24,44,28],[80,6,45,8],[81,6,46,8],[81,13,46,15,"_CALLBACKS"],[81,23,46,25],[81,24,46,26,"id"],[81,26,46,28],[81,27,46,29],[82,6,47,8,"_unregisterListenersIfNeeded"],[82,34,47,36],[82,35,47,37],[82,36,47,38],[83,4,48,4],[83,5,48,5],[83,6,48,6],[84,4,49,4,"setSpeakingListener"],[84,23,49,23],[84,24,49,24],[84,50,49,50],[84,52,49,52,"_ref4"],[84,57,49,52],[84,61,49,64],[85,6,49,64],[85,10,49,55,"id"],[85,12,49,57],[85,15,49,57,"_ref4"],[85,20,49,57],[85,21,49,55,"id"],[85,23,49,57],[86,6,50,8],[86,10,50,14,"options"],[86,17,50,21],[86,20,50,24,"_CALLBACKS"],[86,30,50,34],[86,31,50,35,"id"],[86,33,50,37],[86,34,50,38],[87,6,51,8],[87,10,51,12,"options"],[87,17,51,19],[87,21,51,23,"options"],[87,28,51,30],[87,29,51,31,"onStopped"],[87,38,51,40],[87,40,51,42],[88,8,52,12,"options"],[88,15,52,19],[88,16,52,20,"onStopped"],[88,25,52,29],[88,26,52,30],[88,27,52,31],[89,6,53,8],[90,6,54,8],[90,13,54,15,"_CALLBACKS"],[90,23,54,25],[90,24,54,26,"id"],[90,26,54,28],[90,27,54,29],[91,6,55,8,"_unregisterListenersIfNeeded"],[91,34,55,36],[91,35,55,37],[91,36,55,38],[92,4,56,4],[92,5,56,5],[92,6,56,6],[93,4,57,4],[94,4,58,4,"setSpeakingListener"],[94,23,58,23],[94,24,58,24],[94,48,58,48],[94,50,58,50,"_ref5"],[94,55,58,50],[94,59,58,69],[95,6,58,69],[95,10,58,53,"id"],[95,12,58,55],[95,15,58,55,"_ref5"],[95,20,58,55],[95,21,58,53,"id"],[95,23,58,55],[96,8,58,57,"error"],[96,13,58,62],[96,16,58,62,"_ref5"],[96,21,58,62],[96,22,58,57,"error"],[96,27,58,62],[97,6,59,8],[97,10,59,14,"options"],[97,17,59,21],[97,20,59,24,"_CALLBACKS"],[97,30,59,34],[97,31,59,35,"id"],[97,33,59,37],[97,34,59,38],[98,6,60,8],[98,10,60,12,"options"],[98,17,60,19],[98,21,60,23,"options"],[98,28,60,30],[98,29,60,31,"onError"],[98,36,60,38],[98,38,60,40],[99,8,61,12,"options"],[99,15,61,19],[99,16,61,20,"onError"],[99,23,61,27],[99,24,61,28],[99,28,61,32,"Error"],[99,33,61,37],[99,34,61,38,"error"],[99,39,61,43],[99,40,61,44],[99,41,61,45],[100,6,62,8],[101,6,63,8],[101,13,63,15,"_CALLBACKS"],[101,23,63,25],[101,24,63,26,"id"],[101,26,63,28],[101,27,63,29],[102,6,64,8,"_unregisterListenersIfNeeded"],[102,34,64,36],[102,35,64,37],[102,36,64,38],[103,4,65,4],[103,5,65,5],[103,6,65,6],[104,2,66,0],[105,2,67,0],[106,2,68,0],[107,0,69,0],[108,0,70,0],[109,0,71,0],[110,0,72,0],[111,0,73,0],[112,2,74,7],[112,11,74,16,"speak"],[112,16,74,21,"speak"],[112,17,74,22,"text"],[112,21,74,26],[112,23,74,42],[113,4,74,42],[113,8,74,28,"options"],[113,15,74,35],[113,18,74,35,"arguments"],[113,27,74,35],[113,28,74,35,"length"],[113,34,74,35],[113,42,74,35,"arguments"],[113,51,74,35],[113,59,74,35,"undefined"],[113,68,74,35],[113,71,74,35,"arguments"],[113,80,74,35],[113,86,74,38],[113,87,74,39],[113,88,74,40],[114,4,75,4],[114,8,75,10,"id"],[114,10,75,12],[114,13,75,15,"_makeCallbackId"],[114,28,75,30],[114,29,75,31],[114,30,75,32],[115,4,76,4,"_CALLBACKS"],[115,14,76,14],[115,15,76,15,"id"],[115,17,76,17],[115,18,76,18],[115,21,76,21,"options"],[115,28,76,28],[116,4,77,4,"_registerListenersIfNeeded"],[116,30,77,30],[116,31,77,31],[116,32,77,32],[117,4,78,4,"ExponentSpeech"],[117,18,78,18],[117,19,78,18,"default"],[117,26,78,18],[117,27,78,19,"speak"],[117,32,78,24],[117,33,78,25,"String"],[117,39,78,31],[117,40,78,32,"id"],[117,42,78,34],[117,43,78,35],[117,45,78,37,"text"],[117,49,78,41],[117,51,78,43,"options"],[117,58,78,50],[117,59,78,51],[118,2,79,0],[119,2,80,0],[120,2,81,0],[121,0,82,0],[122,0,83,0],[123,0,84,0],[124,2,81,0],[124,11,85,22,"getAvailableVoicesAsync"],[124,34,85,45,"getAvailableVoicesAsync"],[124,35,85,45],[125,4,85,45],[125,11,85,45,"_getAvailableVoicesAsync"],[125,35,85,45],[125,36,85,45,"apply"],[125,41,85,45],[125,48,85,45,"arguments"],[125,57,85,45],[126,2,85,45],[126,4,91,0],[127,2,92,0],[128,0,93,0],[129,0,94,0],[130,0,95,0],[131,0,96,0],[132,2,92,0],[132,11,92,0,"_getAvailableVoicesAsync"],[132,36,92,0],[133,4,92,0,"_getAvailableVoicesAsync"],[133,28,92,0],[133,35,92,0,"_asyncToGenerator"],[133,52,92,0],[133,53,92,0,"default"],[133,60,92,0],[133,62,85,7],[133,75,85,48],[134,6,86,4],[134,10,86,8],[134,11,86,9,"ExponentSpeech"],[134,25,86,23],[134,26,86,23,"default"],[134,33,86,23],[134,34,86,24,"getVoices"],[134,43,86,33],[134,45,86,35],[135,8,87,8],[135,14,87,14],[135,18,87,18,"UnavailabilityError"],[135,34,87,37],[135,35,87,37,"UnavailabilityError"],[135,54,87,37],[135,55,87,38],[135,63,87,46],[135,65,87,48],[135,76,87,59],[135,77,87,60],[136,6,88,4],[137,6,89,4],[137,13,89,11,"ExponentSpeech"],[137,27,89,25],[137,28,89,25,"default"],[137,35,89,25],[137,36,89,26,"getVoices"],[137,45,89,35],[137,46,89,36],[137,47,89,37],[138,4,90,0],[138,5,90,1],[139,4,90,1],[139,11,90,1,"_getAvailableVoicesAsync"],[139,35,90,1],[139,36,90,1,"apply"],[139,41,90,1],[139,48,90,1,"arguments"],[139,57,90,1],[140,2,90,1],[141,2,90,1],[141,11,97,22,"isSpeakingAsync"],[141,26,97,37,"isSpeakingAsync"],[141,27,97,37],[142,4,97,37],[142,11,97,37,"_isSpeakingAsync"],[142,27,97,37],[142,28,97,37,"apply"],[142,33,97,37],[142,40,97,37,"arguments"],[142,49,97,37],[143,2,97,37],[143,4,100,0],[144,2,101,0],[145,0,102,0],[146,0,103,0],[147,2,101,0],[147,11,101,0,"_isSpeakingAsync"],[147,28,101,0],[148,4,101,0,"_isSpeakingAsync"],[148,20,101,0],[148,27,101,0,"_asyncToGenerator"],[148,44,101,0],[148,45,101,0,"default"],[148,52,101,0],[148,54,97,7],[148,67,97,40],[149,6,98,4],[149,13,98,11,"ExponentSpeech"],[149,27,98,25],[149,28,98,25,"default"],[149,35,98,25],[149,36,98,26,"isSpeaking"],[149,46,98,36],[149,47,98,37],[149,48,98,38],[150,4,99,0],[150,5,99,1],[151,4,99,1],[151,11,99,1,"_isSpeakingAsync"],[151,27,99,1],[151,28,99,1,"apply"],[151,33,99,1],[151,40,99,1,"arguments"],[151,49,99,1],[152,2,99,1],[153,2,99,1],[153,11,104,22,"stop"],[153,15,104,26,"stop"],[153,16,104,26],[154,4,104,26],[154,11,104,26,"_stop"],[154,16,104,26],[154,17,104,26,"apply"],[154,22,104,26],[154,29,104,26,"arguments"],[154,38,104,26],[155,2,104,26],[155,4,107,0],[156,2,108,0],[157,0,109,0],[158,0,110,0],[159,2,108,0],[159,11,108,0,"_stop"],[159,17,108,0],[160,4,108,0,"_stop"],[160,9,108,0],[160,16,108,0,"_asyncToGenerator"],[160,33,108,0],[160,34,108,0,"default"],[160,41,108,0],[160,43,104,7],[160,56,104,29],[161,6,105,4],[161,13,105,11,"ExponentSpeech"],[161,27,105,25],[161,28,105,25,"default"],[161,35,105,25],[161,36,105,26,"stop"],[161,40,105,30],[161,41,105,31],[161,42,105,32],[162,4,106,0],[162,5,106,1],[163,4,106,1],[163,11,106,1,"_stop"],[163,16,106,1],[163,17,106,1,"apply"],[163,22,106,1],[163,29,106,1,"arguments"],[163,38,106,1],[164,2,106,1],[165,2,106,1],[165,11,111,22,"pause"],[165,16,111,27,"pause"],[165,17,111,27],[166,4,111,27],[166,11,111,27,"_pause"],[166,17,111,27],[166,18,111,27,"apply"],[166,23,111,27],[166,30,111,27,"arguments"],[166,39,111,27],[167,2,111,27],[167,4,117,0],[168,2,118,0],[169,0,119,0],[170,0,120,0],[171,0,121,0],[172,2,118,0],[172,11,118,0,"_pause"],[172,18,118,0],[173,4,118,0,"_pause"],[173,10,118,0],[173,17,118,0,"_asyncToGenerator"],[173,34,118,0],[173,35,118,0,"default"],[173,42,118,0],[173,44,111,7],[173,57,111,30],[174,6,112,4],[174,10,112,8],[174,11,112,9,"ExponentSpeech"],[174,25,112,23],[174,26,112,23,"default"],[174,33,112,23],[174,34,112,24,"pause"],[174,39,112,29],[174,41,112,31],[175,8,113,8],[175,14,113,14],[175,18,113,18,"UnavailabilityError"],[175,34,113,37],[175,35,113,37,"UnavailabilityError"],[175,54,113,37],[175,55,113,38],[175,63,113,46],[175,65,113,48],[175,72,113,55],[175,73,113,56],[176,6,114,4],[177,6,115,4],[177,13,115,11,"ExponentSpeech"],[177,27,115,25],[177,28,115,25,"default"],[177,35,115,25],[177,36,115,26,"pause"],[177,41,115,31],[177,42,115,32],[177,43,115,33],[178,4,116,0],[178,5,116,1],[179,4,116,1],[179,11,116,1,"_pause"],[179,17,116,1],[179,18,116,1,"apply"],[179,23,116,1],[179,30,116,1,"arguments"],[179,39,116,1],[180,2,116,1],[181,2,116,1],[181,11,122,22,"resume"],[181,17,122,28,"resume"],[181,18,122,28],[182,4,122,28],[182,11,122,28,"_resume"],[182,18,122,28],[182,19,122,28,"apply"],[182,24,122,28],[182,31,122,28,"arguments"],[182,40,122,28],[183,2,122,28],[184,2,122,28],[184,11,122,28,"_resume"],[184,19,122,28],[185,4,122,28,"_resume"],[185,11,122,28],[185,18,122,28,"_asyncToGenerator"],[185,35,122,28],[185,36,122,28,"default"],[185,43,122,28],[185,45,122,7],[185,58,122,31],[186,6,123,4],[186,10,123,8],[186,11,123,9,"ExponentSpeech"],[186,25,123,23],[186,26,123,23,"default"],[186,33,123,23],[186,34,123,24,"resume"],[186,40,123,30],[186,42,123,32],[187,8,124,8],[187,14,124,14],[187,18,124,18,"UnavailabilityError"],[187,34,124,37],[187,35,124,37,"UnavailabilityError"],[187,54,124,37],[187,55,124,38],[187,63,124,46],[187,65,124,48],[187,73,124,56],[187,74,124,57],[188,6,125,4],[189,6,126,4],[189,13,126,11,"ExponentSpeech"],[189,27,126,25],[189,28,126,25,"default"],[189,35,126,25],[189,36,126,26,"resume"],[189,42,126,32],[189,43,126,33],[189,44,126,34],[190,4,127,0],[190,5,127,1],[191,4,127,1],[191,11,127,1,"_resume"],[191,18,127,1],[191,19,127,1,"apply"],[191,24,127,1],[191,31,127,1,"arguments"],[191,40,127,1],[192,2,127,1],[193,2,128,0],[193,11,128,9,"setSpeakingListener"],[193,30,128,28,"setSpeakingListener"],[193,31,128,29,"eventName"],[193,40,128,38],[193,42,128,40,"callback"],[193,50,128,48],[193,52,128,50],[194,4,129,4],[194,8,129,10,"listenerCount"],[194,21,129,23],[194,24,129,26,"ExponentSpeech"],[194,38,129,40],[194,39,129,40,"default"],[194,46,129,40],[194,47,129,41,"listenerCount"],[194,60,129,54],[194,61,129,55,"eventName"],[194,70,129,64],[194,71,129,65],[195,4,130,4],[195,8,130,8,"listenerCount"],[195,21,130,21],[195,24,130,24],[195,25,130,25],[195,27,130,27],[196,6,131,8,"ExponentSpeech"],[196,20,131,22],[196,21,131,22,"default"],[196,28,131,22],[196,29,131,23,"removeAllListeners"],[196,47,131,41],[196,48,131,42,"eventName"],[196,57,131,51],[196,58,131,52],[197,4,132,4],[198,4,133,4,"ExponentSpeech"],[198,18,133,18],[198,19,133,18,"default"],[198,26,133,18],[198,27,133,19,"addListener"],[198,38,133,30],[198,39,133,31,"eventName"],[198,48,133,40],[198,50,133,42,"callback"],[198,58,133,50],[198,59,133,51],[199,2,134,0],[200,2,135,0],[200,11,135,9,"removeSpeakingListener"],[200,33,135,31,"removeSpeakingListener"],[200,34,135,32,"eventName"],[200,43,135,41],[200,45,135,43],[201,4,136,4,"ExponentSpeech"],[201,18,136,18],[201,19,136,18,"default"],[201,26,136,18],[201,27,136,19,"removeAllListeners"],[201,45,136,37],[201,46,136,38,"eventName"],[201,55,136,47],[201,56,136,48],[202,2,137,0],[203,2,138,0],[204,2,139,0],[205,0,140,0],[206,0,141,0],[207,0,142,0],[208,2,143,7],[208,6,143,13,"maxSpeechInputLength"],[208,26,143,33],[208,29,143,36,"ExponentSpeech"],[208,43,143,50],[208,44,143,50,"default"],[208,51,143,50],[208,52,143,51,"maxSpeechInputLength"],[208,72,143,71],[208,76,143,75,"Number"],[208,82,143,81],[208,83,143,82,"MAX_VALUE"],[208,92,143,91],[209,0,143,92],[209,3]],"functionMap":{"names":["<global>","_makeCallbackId","_unregisterListenersIfNeeded","_registerListenersIfNeeded","setSpeakingListener$argument_1","speak","getAvailableVoicesAsync","isSpeakingAsync","stop","pause","resume","setSpeakingListener","removeSpeakingListener"],"mappings":"AAA;ACO;CDE;AEC;CFS;AGC;oDCI;KDK;8DCC;KDS;iDCC;KDO;oDCC;KDO;kDCE;KDO;CHC;OKQ;CLK;OMM;CNK;OOO;CPE;OQK;CRE;OSK;CTK;OUM;CVK;AWC;CXM;AYC;CZE"},"hasCjsExports":false},"type":"js/module"}]}